{
  "abi": [
    {
      "type": "impl",
      "name": "PaymentProcessorImpl",
      "interface_name": "starkpay_contracts::interfaces::IPaymentProcessor"
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "type": "interface",
      "name": "starkpay_contracts::interfaces::IPaymentProcessor",
      "items": [
        {
          "type": "function",
          "name": "register_merchant",
          "inputs": [
            {
              "name": "merchant_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "process_payment",
          "inputs": [
            {
              "name": "merchant_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "amount",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "buy_tokens_with_eth",
          "inputs": [
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "min_tokens",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "whitelist_token",
          "inputs": [
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "whitelisted",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "update_platform_fee",
          "inputs": [
            {
              "name": "new_fee_basis_points",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "set_token_price",
          "inputs": [
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "eth_price",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "is_merchant_registered",
          "inputs": [
            {
              "name": "merchant_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "is_token_whitelisted",
          "inputs": [
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_treasury_address",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_platform_fee_basis_points",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_token_price",
          "inputs": [
            {
              "name": "token_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "treasury_address",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "eth_token_address",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::MerchantRegistered",
      "kind": "struct",
      "members": [
        {
          "name": "merchant",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "timestamp",
          "type": "core::integer::u64",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::PaymentProcessed",
      "kind": "struct",
      "members": [
        {
          "name": "merchant",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "payer",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "token",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        },
        {
          "name": "gross_amount",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "net_amount",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "fee",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "timestamp",
          "type": "core::integer::u64",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokenWhitelisted",
      "kind": "struct",
      "members": [
        {
          "name": "token",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "whitelisted",
          "type": "core::bool",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::FeeUpdated",
      "kind": "struct",
      "members": [
        {
          "name": "old_fee",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "new_fee",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokensPurchased",
      "kind": "struct",
      "members": [
        {
          "name": "buyer",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "token",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        },
        {
          "name": "eth_amount",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "token_amount",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "timestamp",
          "type": "core::integer::u64",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokenPriceUpdated",
      "kind": "struct",
      "members": [
        {
          "name": "token",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "old_price",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "new_price",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "MerchantRegistered",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::MerchantRegistered",
          "kind": "nested"
        },
        {
          "name": "PaymentProcessed",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::PaymentProcessed",
          "kind": "nested"
        },
        {
          "name": "TokenWhitelisted",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokenWhitelisted",
          "kind": "nested"
        },
        {
          "name": "FeeUpdated",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::FeeUpdated",
          "kind": "nested"
        },
        {
          "name": "TokensPurchased",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokensPurchased",
          "kind": "nested"
        },
        {
          "name": "TokenPriceUpdated",
          "type": "starkpay_contracts::SimplePaymentProcessor::SimplePaymentProcessor::TokenPriceUpdated",
          "kind": "nested"
        }
      ]
    }
  ]
}
